package org.postgresql.sql2.communication;

import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;

import java.nio.ByteBuffer;
import java.util.Arrays;
import java.util.Collection;

import static org.junit.jupiter.api.Assertions.assertNotNull;

public class BEFrameParserTest {

  public static Collection<Object[]> data() {
    return Arrays.asList(new Object[][] {
        { "Authentication Request MD5", new byte[] {0x52, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x05, (byte)0xd3, (byte)0xc9, 0x1c, 0x3b} },
        { "Authentication Request Success", new byte[] {0x52, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00} },
        { "Parameter status, application name", new byte[] {0x53, 0x00, 0x00, 0x00, 0x1a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x00, 0x70, 0x73, 0x71, 0x6c, 0x00} },
        { "Parameter status, client encoding", new byte[] {0x53, 0x00, 0x00, 0x00, 0x19, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x00, 0x55, 0x54, 0x46, 0x38, 0x00} },
        { "Parameter status, date style", new byte[] {0x53, 0x00, 0x00, 0x00, 0x17, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00, 0x49, 0x53, 0x4f, 0x2c, 0x20, 0x59, 0x4d, 0x44, 0x00} },
        { "Parameter status, integer date times", new byte[] {0x53, 0x00, 0x00, 0x00, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x00, 0x6f, 0x6e, 0x00} },
        { "Parameter status, interval style", new byte[] {0x53, 0x00, 0x00, 0x00, 0x1b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x00} },
        { "Parameter status, is superuser off", new byte[] {0x53, 0x00, 0x00, 0x00, 0x15, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x00, 0x6f, 0x66, 0x66, 0x00} },
        { "Parameter status, server encoding utf8", new byte[] {0x53, 0x00, 0x00, 0x00, 0x19, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x00, 0x55, 0x54, 0x46, 0x38, 0x00} },
        { "Parameter status, server version 9.5.7", new byte[] {0x53, 0x00, 0x00, 0x00, 0x19, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00, 0x39, 0x2e, 0x35, 0x2e, 0x37, 0x00} },
        { "Parameter status, session authorization", new byte[] {0x53, 0x00, 0x00, 0x00, 0x1f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00, 0x74, 0x65, 0x73, 0x74, 0x00} },
        { "Parameter status, standard conforming strings", new byte[] {0x53, 0x00, 0x00, 0x00, 0x23, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x00, 0x6f, 0x6e, 0x00} },
        { "Parameter status, timezone", new byte[] {0x53, 0x00, 0x00, 0x00, 0x17, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x00, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x00} },
        { "backend key data", new byte[] {0x4b, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x70, (byte)0x86, 0x70, (byte)0x8d, 0x69, (byte)0xd4} },
        { "ready for query", new byte[] {0x5a, 0x00, 0x00, 0x00, 0x05, 0x49} }
    });
  }

  @ParameterizedTest
  @MethodSource("data")
  public void parseNetworkPayload(String packetName, byte[] packet) {
    BEFrameParser instance = new BEFrameParser();

    ByteBuffer bb = ByteBuffer.allocate(1024);
    bb.put(packet);
    BEFrame sp = instance.parseBEFrame(bb, 0, packet.length);

    assertNotNull(sp, packetName + " could not be parsed");
  }
}